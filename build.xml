<?xml version="1.0" encoding="utf-8"?>

<project basedir="." default="jar" name="jescov">
  <description>
    JesCov collects coverage information for your JavaScript project
  </description>

  <property file="build.properties"/>
  <property file="default.build.properties"/>
  <property file="version.properties"/>

  <path id="libs.classpath">
    <fileset dir="${lib.dir}" includes="*.jar" excludes="jescov*.jar"/>
  </path>

  <path id="build.main.classpath">
    <path refid="libs.classpath"/>
  </path>

  <path id="build.test.classpath">
    <path refid="libs.classpath"/>
    <pathelement path="${main.classes.dir}"/>
  </path>

  <path id="test.classpath">
    <pathelement path="${basedir}"/>
    <path refid="libs.classpath"/>
    <pathelement path="${main.classes.dir}"/>
    <pathelement path="${test.classes.dir}"/>
  </path>

  <target name="prepare" description="Creates the directories needed for building">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${main.classes.dir}"/>
    <mkdir dir="${test.classes.dir}"/>
    <mkdir dir="${test.results.dir}"/>
    <mkdir dir="${html.test.results.dir}"/>
    <mkdir dir="${src.gen.dir}"/>
  </target>

  <target name="generate-grammer" depends="prepare">
    <mkdir dir="${src.gen.dir}" />
    <java jar="${lib.dir}/antlr-3.3-complete.jar" fork="true" dir="${src.dir}">
      <arg value="-make" />
      <arg value="-o" />
      <arg value="../gen" />
      <arg value="com/olabini/jescov/es3/ES3Instrument.g" />
    </java>
  </target>

  <target name="compile" depends="generate-grammer" description="Compile the source files for the project.">
    <tstamp>
      <format property="build.time" pattern="yyyy-MM-dd hh:mm"/>
    </tstamp>

    <exec executable="git" outputproperty="jescov.revision" failonerror="false" failifexecutionfails="false">
      <arg line="log -1 --format=format:%h"/>
    </exec>

    <filter token="DATE" value="${build.time}"/>
    <filter token="COMMIT" value="${jescov.revision}"/>
    <filter token="VERSION_NUMBER" value="${jescov.version}"/>
    <filter token="VERSION_STRING" value="JesCov ${jescov.version}"/>

    <javac destdir="${main.classes.dir}" source="${javac.version}" target="${javac.version}" debug="true" encoding="UTF-8" includeantruntime="false">
      <classpath refid="build.main.classpath"/>
      <src path="${src.dir}"/>
      <src path="${src.gen.dir}"/>
      <include name="**/*.java"/>
    </javac>

    <copy todir="${main.classes.dir}" filtering="true" overwrite="true">
      <fileset dir="${src.dir}" includes="**/*.properties,**/*.js"/>
    </copy>
  </target>

  <target name="compile-tests" depends="compile" description="Compile the test source files for the project.">
    <javac destdir="${test.classes.dir}" debug="true" source="${javac.version}" target="${javac.version}" encoding="UTF-8" includeantruntime="false">
      <classpath refid="build.test.classpath"/>
      <src path="${src.test.dir}"/>
      <include name="**/*.java"/>
    </javac>
  </target>

  <target name="test" depends="compile-tests" description="Runs all tests">
    <junit fork="yes" forkMode="once" failureproperty="junit.failure" showoutput="true" timeout="1800000">
      <jvmarg value="-ea"/>
      <classpath refid="test.classpath"/>
      <sysproperty key="file.encoding" value="UTF-8"/>
      <formatter type="brief" usefile="false" />

      <batchtest fork="yes">
        <fileset dir="${src.test.dir}">
          <include name="**/*Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
    <fail if="junit.failure" message="Test(s) failed."/>
  </target>

  <target name="test-specific" depends="compile-tests" description="Runs a specific test">
    <junit fork="yes" forkMode="once" failureproperty="junit.failure" showoutput="true" timeout="1800000">
      <jvmarg value="-ea"/>
      <classpath refid="test.classpath"/>
      <sysproperty key="file.encoding" value="UTF-8"/>
      <formatter type="brief" usefile="false" />

      <batchtest fork="yes">
        <fileset dir="${src.test.dir}">
          <include name="**/short_circuiting_and_*Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
    <fail if="junit.failure" message="Test(s) failed."/>
  </target>

  <target name="jar" depends="test" description="Create the jescov.jar file">
    <jar destfile="${lib.dir}/jescov-${jescov.version}.jar">
      <fileset dir="${main.classes.dir}">
        <include name="**/*.class"/>
        <include name="**/*.properties"/>
        <include name="**/*.js"/>
      </fileset>
      <fileset dir="${src.resources.dir}"/>
      <zipfileset src="${lib.dir}/antlr-3.3-complete.jar"/>
      <zipfileset src="${lib.dir}/js.jar"/>
      <zipfileset src="${lib.dir}/json_simple-1.1.jar"/>
      <zipfileset src="${lib.dir}/ST-4.0.4.jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Main-Class" value="com.olabini.jescov.console.Runner"/>
      </manifest>
    </jar>
  </target>

  <target name="clean" description="clean almost everything">
    <delete dir="${build.dir}"/>
  </target>
</project>
